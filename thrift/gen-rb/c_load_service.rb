#
# Autogenerated by Thrift Compiler (0.9.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'yo_da_service_types'

module CLoadService
  class Client
    include ::Thrift::Client

    def load(prefix, objectList)
      send_load(prefix, objectList)
      recv_load()
    end

    def send_load(prefix, objectList)
      send_message('load', Load_args, :prefix => prefix, :objectList => objectList)
    end

    def recv_load()
      result = receive_message(Load_result)
      return
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_load(seqid, iprot, oprot)
      args = read_args(iprot, Load_args)
      result = Load_result.new()
      @handler.load(args.prefix, args.objectList)
      write_result(result, oprot, 'load', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Load_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    PREFIX = 1
    OBJECTLIST = 2

    FIELDS = {
      PREFIX => {:type => ::Thrift::Types::STRING, :name => 'prefix'},
      OBJECTLIST => {:type => ::Thrift::Types::STRING, :name => 'objectList'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Load_result
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

