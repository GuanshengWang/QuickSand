#
# Autogenerated by Thrift Compiler (0.9.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'yo_da_service_types'

module DBDumpService
  class Client
    include ::Thrift::Client

    def dump(task)
      send_dump(task)
      recv_dump()
    end

    def send_dump(task)
      send_message('dump', Dump_args, :task => task)
    end

    def recv_dump()
      result = receive_message(Dump_result)
      return
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_dump(seqid, iprot, oprot)
      args = read_args(iprot, Dump_args)
      result = Dump_result.new()
      @handler.dump(args.task)
      write_result(result, oprot, 'dump', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Dump_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TASK = 1

    FIELDS = {
      TASK => {:type => ::Thrift::Types::STRUCT, :name => 'task', :class => ::CTask}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Dump_result
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

